#include<math.h>
#include<iostream>
#include<fstream>
#include<malloc.h>
using namespace std;
int range, range2;

//Функция выделения памяти для матрицы
int** InitMatrix(int n, int m)
{
	int** Matrix = new int* [n];
	for (int i = 0; i < n; i++)
		Matrix[i] = new int[m];
	return Matrix;
}

//Функция транспонирования матрицы
int** TranspMatrix(int** Matrix, int& n, int& m)
{
	int** tMatrix = InitMatrix(m, n);

	for (int i = 0; i < m; i++)
		for (int j = 0; j < n; j++)
			tMatrix[i][j] = Matrix[j][i];
	int temp = n;
	n = m;
	m = temp;

	return tMatrix;
}


int main()
{ 
	int rows, cols;
	cout << "Enter number of rows = ";
	cin >> rows;
	while (rows <= 0) 
	{
		cout << "Incorrect data. Number of elements in matrix should be positive.\n";
		cout << "Enter number of rows = ";
		cin >> rows;
	}
	cout << "\n";
//===========================================================================================




	cout << "Enter number of cols = ";
	cin >> cols;
	while (cols <= 0) 
	{
		cout << "Incorrect data. Number of elements in matrix should be positive.\n";
		cout << "Enter number of cols = ";
		cin >> cols;
	}
	cout << "\n";



//===========================================================================================



	
	int** arr = new int* [rows];
	cout << "Matrix A:\n";
	ifstream file;
	file.open("E:\\Уник Программ\\2 сем\\Лаб 2 (2)\\random.txt", ios::in);
	if (!file.is_open()) { cout << "Error: no file\n" << endl; }
	else
	{
		for (int i = 0; i < cols; i++) 
		{
			arr[i] = new int[cols];
		}
		for (int i = 0; i < rows; i++) 
		{
			for (int j = 0; j < cols; j++) 
			{
				file >> arr[i][j];
				cout << arr[i][j] << "\t";
			}
			cout << endl;
		}
		system("pause");
	}

	file.close();
	//===========================================================================================

	cout << "Transponed matrix A:" << endl;

	arr = TranspMatrix(arr, rows, cols);

	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{

			cout << arr[i][j] << "\t";
		}
		cout << endl;
	}
	system("pause");



	//===========================================================================================             cols1=rows2

	cout << "Matrix C:\n";
	int* arr2;
	arr2 = (int*)malloc(rows * cols * sizeof(int));
	if (arr2) 
	{
		*arr2 = '\0';
		file.open("E:\\Уник Программ\\2 сем\\Лаб 2 (2)\\pochti_sort.txt", ios::in);
		if (!file.is_open()) { cout << "Error: no file\n" << endl; }
		else
		{
			for (int i = 0; i < cols; i++)
			{
				for (int j = 0; j < rows; j++)
				{
					file >> *(arr2 + i * rows + j);
					cout << *(arr2 + i * rows + j) << "\t";
				}
				cout << endl;
			}
			system("pause");
		}

		file.close();
		free(arr2);
		
	}
	//==========================================================================================

	cout << "Vector B:\n";
	int* arr3;
	arr3 = (int*)malloc(rows * sizeof(int));
	if (arr3)
	{
		*arr3 = '\0';
		file.open("E:\\Уник Программ\\2 сем\\Лаб 2 (2)\\random2.txt", ios::in);
		if (!file.is_open()) { cout << "Error: no file\n" << endl; }
		else
		{
			for (int i = 0; i < cols; i++) 
			{
				file >> *(arr3);
				cout << *(arr3) << "\n";
			}
		}

		
	}
	free(arr3);
	system("pause");
	//==========================================================================================

	cout << "aT * -5 Multiplication result:\n";
	int f = -5;
	for (int i = 0; i < rows; i++)
	{
		for (int j = 0; j < cols; j++)
		{
			arr[i][j] *= f;
			cout << arr[i][j] << "\t";
			
		}
		cout << endl;
	}
	//==========================================================================================
	

    //==========================================================================================
		delete[] arr;
	}
